window.SIDEBAR_ITEMS = {"enum":[["ColorMode","`ColorMode` indicates how the color of a pixel is encoded in a `Visual`."],["Limit","`Limit` defines an upper-bound on how much of a resource should be allocated when the amount to be allocated is specified by the media stream, which is untrusted. A limit will place an upper-bound on this allocation at the risk of breaking potentially valid streams. Limits are used to prevent denial-of-service attacks."],["StandardTagKey","`StandardTagKey` is an enumeration providing standardized keys for common tag types. A tag reader may assign a `StandardTagKey` to a `Tag` if the tagâ€™s key is generally accepted to map to a specific usage."],["StandardVisualKey","`StandardVisualKey` is an enumeration providing standardized keys for common visual dispositions. A demuxer may assign a `StandardVisualKey` to a `Visual` if the disposition of the attached visual is known and can be mapped to a standard key."],["Value","A `Tag` value."]],"struct":[["Metadata","A reference to the metadata inside of a [MetadataLog]."],["MetadataBuilder","`MetadataBuilder` is the builder for `Metadata` revisions."],["MetadataLog","`MetadataLog` is a container for time-ordered `Metadata` revisions."],["MetadataOptions","`MetadataOptions` is a common set of options that all metadata readers use."],["MetadataRevision","`Metadata` is a container for a single discrete revision of metadata information."],["Size","A 2 dimensional (width and height) size type."],["Tag","A `Tag` encapsulates a key-value pair of metadata."],["VendorData","`VendorData` is any binary metadata that is proprietary to a certain application or vendor."],["Visual","A `Visual` is any 2 dimensional graphic."]],"trait":[["MetadataReader",""]]};