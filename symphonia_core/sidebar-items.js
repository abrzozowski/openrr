window.SIDEBAR_ITEMS = {"macro":[["support_codec","Convenience macro for declaring a `CodecDescriptor`."],["support_format","Convenience macro for declaring a probe `Descriptor` for a `FormatReader`."],["support_metadata","Convenience macro for declaring a probe `Descriptor` for a `MetadataReader`."]],"mod":[["audio","The `audio` module provides primitives for working with multi-channel audio buffers of varying sample formats."],["checksum","The `checksum` module provides implementations of common error-detecting codes and hashing algorithms."],["codecs","The `codec` module provides the traits and support structures necessary to implement audio codec decoders."],["conv","The `conv` module provides methods to convert samples between different sample types (formats)."],["dsp","The `dsp` module provides efficient implementations of common signal processing algorithms."],["errors","The `errors` module defines the common error type."],["formats","The `format` module provides the traits and support structures necessary to implement media demuxers."],["io","The `io` module implements composable bit- and byte-level I/O."],["meta","The `meta` module defines basic metadata elements, and management structures."],["probe","The `probe` module provides methods and traits to support auto-detection of media formats from arbitrary media streams."],["sample","The `sample` module defines the core audio sample trait and any non-primitive sample data types."],["units","The `units` module provides definitions for common units."],["util","The `util` module provides a repository of commonly used utility functions sorted into distinct categories."]]};