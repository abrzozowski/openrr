window.SIDEBAR_ITEMS = {"mod":[["vlc","The `vlc` module provides support for decoding variable-length codes (VLC)."]],"struct":[["BitReaderLtr","`BitReaderLtr` reads bits from most-significant to least-significant from any `&[u8]`."],["BitReaderRtl","`BitReaderRtl` reads bits from least-significant to most-significant from any `&[u8]`."],["BitStreamLtr","`BitStreamLtr` reads bits from most-significant to least-significant from any source that implements [`ReadBytes`]."],["BitStreamRtl","`BitStreamRtl` reads bits from least-significant to most-significant from any source that implements [`ReadBytes`]."],["BufReader","A `BufReader` reads bytes from a byte buffer."],["MediaSourceStream","`MediaSourceStream` is the main reader type for Symphonia."],["MediaSourceStreamOptions","`MediaSourceStreamOptions` specifies the buffering behaviour of a `MediaSourceStream`."],["MonitorStream","A `MonitorStream` is a passive stream that observes all operations performed on the inner stream and forwards an immutable reference of the result to a [`Monitor`]."],["ReadOnlySource","`ReadOnlySource` wraps any source implementing [`std::io::Read`] in an unseekable [`MediaSource`]."],["ScopedStream","A `ScopedStream` restricts the number of bytes that may be read to an upper limit."]],"trait":[["FiniteBitStream","A `FiniteBitStream` is a bit stream that has a known length in bits."],["FiniteStream","A `FiniteStream` is a stream that has a known length in bytes."],["MediaSource","`MediaSource` is a composite trait of [`std::io::Read`] and [`std::io::Seek`]. A source must implement this trait to be used by [`MediaSourceStream`]."],["Monitor","A `Monitor` provides a common interface to examine the operations observed be a [`MonitorStream`]."],["ReadBitsLtr","`ReadBitsLtr` reads bits from most-significant to least-significant."],["ReadBitsRtl","`ReadBitsRtl` reads bits from least-significant to most-significant."],["ReadBytes","`ReadBytes` provides methods to read bytes and interpret them as little- or big-endian unsigned integers or floating-point values of standard widths."],["SeekBuffered","`SeekBuffered` provides methods to seek within the buffered portion of a stream."]]};